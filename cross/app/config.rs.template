use embassy_stm32::Peripherals;
use embassy_stm32::peripherals::*;
use math::measurements::{{Speed, Length}};
use stepper::motion::Positioning;
use stepper::planner::{{MotionConfig, RecoverMotionConfig, RetractionMotionConfig}};
use crate::config::*;

pub type XStepPin = {};
pub type XDirPin = {};
pub type YStepPin = {};
pub type YDirPin = {};
pub type ZStepPin = {};
pub type ZDirPin = {};
pub type EStepPin = {};
pub type EDirPin = {};
pub type PwmTimer = {};
pub type PwmCh1Pin = {};
pub type PwmCh2Pin = {};
pub type PwmCh3Pin = {};
pub type UartPeripheral = {};
pub type UartRxPin = {};
pub type UartRxDma = {};
pub type UartTxPin = {};
pub type UartTxDma = {};
pub type HotendAdcPeripheral = {};
pub type HotendAdcInputPin = {};
pub type HotendAdcDma = {};
pub type HeatbedAdcPeripheral = {};
pub type HeatbedAdcInputPin = {};
pub type HeatbedAdcDma = {};
pub type SdCardSpiPeripheral = {};
pub type SdCardSpiTimer = {};
pub type SdCardSpiMosiPin = {};
pub type SdCardSpiMisoPin = {};
pub type SdCardSpiCsPin = {};
pub type XEndstop = {};
pub type YEndstop = {};
pub type ZEndstop = {};

pub fn peripherals_init(p: Peripherals) -> PrinterConfig<
    XStepPin,
    XDirPin,
    YStepPin,
    YDirPin,
    ZStepPin,
    ZDirPin,
    EStepPin,
    EDirPin,
    PwmTimer,
    PwmCh1Pin,
    PwmCh2Pin,
    PwmCh3Pin,
    UartPeripheral,
    UartRxPin,
    UartRxDma,
    UartTxPin,
    UartTxDma,
    HotendAdcPeripheral,
    HotendAdcInputPin,
    HotendAdcDma,
    HeatbedAdcPeripheral,
    HeatbedAdcInputPin,
    HeatbedAdcDma,
    SdCardSpiPeripheral,
    SdCardSpiTimer,
    SdCardSpiMosiPin,
    SdCardSpiMisoPin,
    SdCardSpiCsPin,
    XEndstop,
    YEndstop,
    ZEndstop,
>{{
    PrinterConfig{{
        motion: MotionConfig{{
            arc_unit_length: Length::from_millimeters({:.2}),
            feedrate: Speed::from_meters_per_second({:.2} / 1000.0),
            positioning: Positioning::from(\"{:.2}\"),
            retraction: RetractionMotionConfig{{
                feedrate: Speed::from_meters_per_second({:.2}),
                length: Length::from_meters({:.2} * 1000.0),
                z_lift: Length::from_meters({:.2} * 1000.0)
            }},
            recover: RecoverMotionConfig{{
                feedrate: Speed::from_meters_per_second({:.2}),
                length: Length::from_meters({:.2} * 1000.0),
            }},
        }},
        endstops: EndstopsConfig{{
            x: p.{},
            y: p.{},
            z: p.{},
        }},
        steppers: SteppersConfig{{
            x: StepperConfig{{
                step_pin: p.{},
                dir_pin: p.{},
                stepping_mode: \"{}\",
                distance_per_step: {:.2},
                steps_per_revolution: {},
                bounds: ({:.2}, {:.2}),
                positive_direction: \"{}\"
            }},
            y: StepperConfig{{
                step_pin: p.{},
                dir_pin: p.{},
                stepping_mode: \"{}\",
                distance_per_step: {:.2},
                steps_per_revolution: {},
                bounds: ({:.2}, {:.2}),
                positive_direction: \"{}\"
            }},
            z: StepperConfig{{
                step_pin: p.{},
                dir_pin: p.{},
                stepping_mode: \"{}\",
                distance_per_step: {:.2},
                steps_per_revolution: {},
                bounds: ({:.2}, {:.2}),
                positive_direction: \"{}\"
            }},
            e: StepperConfig{{
                step_pin: p.{},
                dir_pin: p.{},
                stepping_mode: \"{}\",
                distance_per_step: {:.2},
                steps_per_revolution: {},
                bounds: ({:.2}, {:.2}),
                positive_direction: \"{}\"
            }}
        }},
        pwm: PwmConfig{{
            frequency: {},
            timer: p.{},
            ch1: p.{},
            ch2: p.{},
            ch3: p.{},
        }},
        uart: UartConfig{{
            peripheral: p.{},
            baudrate: {},
            rx: UartPartConfig{{
                pin: p.{},
                dma: p.{}
            }},
            tx: UartPartConfig{{
                pin: p.{},
                dma: p.{}
            }}
        }},
        hotend: ThermistorConfig{{
            adc: AdcConfig {{
                peripheral: p.{},
                input: p.{},
                dma: p.{}
            }},
            pwm: PwmOutputConfig {{
                channel: {}
            }},
            heater: HeaterConfig {{
                r_series: {:.2},
                r0: {:.2},
                b: {:.2},
                pid: PidConfig{{
                    k_p: {:.2},
                    k_i: {:.2},
                    k_d: {:.2},
                }}
            }},
        }},
        heatbed: ThermistorConfig{{
            adc: AdcConfig {{
                peripheral: p.{},
                input: p.{},
                dma: p.{}
            }},
            pwm: PwmOutputConfig {{
                channel: {}
            }},
            heater: HeaterConfig {{
                r_series: {:.2},
                r0: {:.2},
                b: {:.2},
                pid: PidConfig{{
                    k_p: {:.2},
                    k_i: {:.2},
                    k_d: {:.2},
                }}
            }},
        }},
        fan: FanConfig{{
            pwm: PwmOutputConfig {{
                channel: {}
            }}
        }},
        sdcard: SdCardConfig {{
            spi: SpiConfig {{
                peripheral: p.{},
                clk: p.{},
                mosi: p.{},
                miso: p.{},
                cs: p.{},
            }}
        }}
    }}
}}

