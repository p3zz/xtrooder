[package]
edition = "2021"
name = "rusty-printer"
version = "0.1.0"
license = "MIT OR Apache-2.0"

[dependencies.embassy-sync]
git = "https://github.com/embassy-rs/embassy"
rev = "3382ca1a5429504c56c360e99ec09f4f641948a2"
package = "embassy-sync"
features = ["defmt"]

[dependencies.embassy-executor]
git = "https://github.com/embassy-rs/embassy"
rev = "3382ca1a5429504c56c360e99ec09f4f641948a2"
package = "embassy-executor"
features = [
  "nightly",
  "arch-cortex-m",
  "executor-thread",
  "defmt",
  "integrated-timers",
]

[dependencies.embassy-time]
git = "https://github.com/embassy-rs/embassy"
rev = "3382ca1a5429504c56c360e99ec09f4f641948a2"
package = "embassy-time"
features = ["defmt", "defmt-timestamp-uptime", "tick-hz-32_768"]

[dependencies.embassy-stm32]
git = "https://github.com/embassy-rs/embassy"
rev = "3382ca1a5429504c56c360e99ec09f4f641948a2"
package = "embassy-stm32"
features = [
  "nightly",
  "defmt",
  "unstable-pac",
  "stm32h753zi",
  "time-driver-any",
  "memory-x",
]

[dependencies.pid-lite]
version = "1.1.2"
default-features = false

[dependencies]
defmt = "0.3"
defmt-rtt = "0.4"

cortex-m = { version = "0.7.6", features = ["inline-asm", "critical-section-single-core"] }
cortex-m-rt = "0.7.0"
embedded-hal = "0.2.6"
embedded-hal-1 = { package = "embedded-hal", version = "=1.0.0-alpha.11" }
embedded-hal-async = { version = "=0.2.0-alpha.2" }
embedded-nal-async = "0.4.0"
panic-probe = { version = "0.3", features = ["print-defmt"] }
futures = { version = "0.3.17", default-features = false, features = ["async-await"] }
heapless = { version = "0.7.5", default-features = false }
rand_core = "0.6.3"
critical-section = "1.1"
micromath = "2.0.0"
stm32-fmc = "0.2.4"
embedded-storage = "0.3.0"
static_cell = { version = "1.1", features = ["nightly"]}

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-
